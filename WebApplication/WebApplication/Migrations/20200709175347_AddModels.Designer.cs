// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication.Models;

namespace WebApplication.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20200709175347_AddModels")]
    partial class AddModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.6.20312.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApplication.Models.Art_Movement", b =>
                {
                    b.Property<int>("IdArtMovement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtMovementIdArtMovement")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFounded")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int>("IdNextArtMovement")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdArtMovement");

                    b.HasIndex("ArtMovementIdArtMovement");

                    b.ToTable("ArtMovements");
                });

            modelBuilder.Entity("WebApplication.Models.Artist", b =>
                {
                    b.Property<int>("IdArtist")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtMovementIdArtMovement")
                        .HasColumnType("int");

                    b.Property<int?>("CityIdCity")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("IdArtMovement")
                        .HasColumnType("int");

                    b.Property<int>("IdCityOfBirth")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nickname")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdArtist");

                    b.HasIndex("ArtMovementIdArtMovement");

                    b.HasIndex("CityIdCity");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("WebApplication.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Population")
                        .HasColumnType("int")
                        .HasMaxLength(100);

                    b.HasKey("IdCity");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("WebApplication.Models.Painting", b =>
                {
                    b.Property<int>("IdPainting")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ArtistIdArtist")
                        .HasColumnType("int");

                    b.Property<int?>("CoArtistIdArtist")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdArtist")
                        .HasColumnType("int");

                    b.Property<int?>("IdCoAuthor")
                        .HasColumnType("int");

                    b.Property<string>("PaintingMedia")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SurfaceType")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPainting");

                    b.HasIndex("ArtistIdArtist");

                    b.HasIndex("CoArtistIdArtist");

                    b.ToTable("Paintings");
                });

            modelBuilder.Entity("WebApplication.Models.Art_Movement", b =>
                {
                    b.HasOne("WebApplication.Models.Art_Movement", "ArtMovement")
                        .WithMany()
                        .HasForeignKey("ArtMovementIdArtMovement");
                });

            modelBuilder.Entity("WebApplication.Models.Artist", b =>
                {
                    b.HasOne("WebApplication.Models.Art_Movement", "ArtMovement")
                        .WithMany()
                        .HasForeignKey("ArtMovementIdArtMovement");

                    b.HasOne("WebApplication.Models.City", "City")
                        .WithMany("Artists")
                        .HasForeignKey("CityIdCity");
                });

            modelBuilder.Entity("WebApplication.Models.Painting", b =>
                {
                    b.HasOne("WebApplication.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistIdArtist");

                    b.HasOne("WebApplication.Models.Artist", "CoArtist")
                        .WithMany()
                        .HasForeignKey("CoArtistIdArtist");
                });
#pragma warning restore 612, 618
        }
    }
}
